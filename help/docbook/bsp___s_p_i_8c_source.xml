<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_bsp___s_p_i_8c_source" xml:lang="zh">
<title>bsp_SPI.c</title>
<indexterm><primary>D:/gitt/bsp_XerolySkinner/bsp_device/bsp_SPI.c</primary></indexterm>
浏览该文件的文档.<programlisting linenumbering="unnumbered"><anchor xml:id="_bsp___s_p_i_8c_source_1l00001"/>00001 <emphasis role="comment">/*----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00002"/>00002 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00003"/>00003 <emphasis role="comment">&#32;#&#32;&#32;Copyright&#32;(c)&#32;2022&#32;Yuankang&#32;Liang(XerolySkinner)</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00004"/>00004 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00005"/>00005 <emphasis role="comment">&#32;#&#32;&#32;本软件按原样提供,无任何明示或暗示</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00006"/>00006 <emphasis role="comment">&#32;#&#32;&#32;在任何情况下,作者都不承担任何损害赔偿责任</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00007"/>00007 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00008"/>00008 <emphasis role="comment">&#32;#&#32;&#32;使用的许可声明:</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00009"/>00009 <emphasis role="comment">&#32;#&#32;&#32;1.&#32;&#32;不得歪曲本软件的来源,你不能声称你编写了原始软件.</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00010"/>00010 <emphasis role="comment">&#32;#&#32;&#32;2.&#32;&#32;免费授予以任何目的,前提是版权声明出现在所有副本中.</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00011"/>00011 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;并且版权声明和许可声明同时出现.</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00012"/>00012 <emphasis role="comment">&#32;#&#32;&#32;3.&#32;&#32;你有使用,复制,修改,分发,和销售本软件的许可.</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00013"/>00013 <emphasis role="comment">&#32;#&#32;&#32;4.&#32;&#32;如果你在产品中使用,产品文档中的声明是赞赏的但不是必须的.</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00014"/>00014 <emphasis role="comment">&#32;#&#32;&#32;5.&#32;&#32;本通知不得从任何来源删除或更改.</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00015"/>00015 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00016"/>00016 <emphasis role="comment">&#32;#&#32;&#32;Yuankang&#32;Liang(XerolySkinner)</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00017"/>00017 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;E-mail:zabbcccbbaz@163.com</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00018"/>00018 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;QQ:2715099320</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00019"/>00019 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;Mobile&#32;Phone:13005636215</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00020"/>00020 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00021"/>00021 <emphasis role="comment">&#32;#&#32;&#32;All&#32;rights&#32;reserved.</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00022"/>00022 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00023"/>00023 
<anchor xml:id="_bsp___s_p_i_8c_source_1l00033"/>00033 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_bsp___s_p_i_8h">bsp_SPI.h</link>&quot;</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00034"/>00034 <emphasis role="preprocessor">#include&#32;&quot;intrins.h&quot;</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00035"/>00035 <emphasis role="preprocessor">#include&#32;&lt;stdarg.h&gt;</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00037"/>00037 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00038"/>00038 <emphasis role="comment">//&#32;&#32;函数</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00045"/><link linkend="_bsp___s_p_i_8c_1a2ecf45e8538defe45a5a16850a81a653">00045</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_bsp___s_p_i_8c_1a2ecf45e8538defe45a5a16850a81a653">SPI3_Byte</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;temp){
<anchor xml:id="_bsp___s_p_i_8c_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;i;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;i&lt;8;i++){
<anchor xml:id="_bsp___s_p_i_8c_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1abaea28949cf8101fa69c8d08cca1deea">SPI3_SCK_PIN</link>&#32;=&#32;0;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1ac76a4601b5600b527bc0e18ce520ffdf">SPI3_SDA_PIN</link>&#32;=&#32;temp&amp;0x01;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&gt;&gt;=1;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1abaea28949cf8101fa69c8d08cca1deea">SPI3_SCK_PIN</link>=1;}}
<anchor xml:id="_bsp___s_p_i_8c_source_1l00052"/>00052 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00059"/><link linkend="_bsp___s_p_i_8c_1a46a267144686406dac124400aa4807d8">00059</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_bsp___s_p_i_8c_1a46a267144686406dac124400aa4807d8">SPI3_WriteOneByte</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;address,<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;dat){
<anchor xml:id="_bsp___s_p_i_8c_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1addf4368e6b0d3da85a501fb3f85a6552">SPI3_RST_PIN</link>=0;&#32;_nop_();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1abaea28949cf8101fa69c8d08cca1deea">SPI3_SCK_PIN</link>=0;&#32;_nop_();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1addf4368e6b0d3da85a501fb3f85a6552">SPI3_RST_PIN</link>=1;&#32;&#32;&#32;&#32;&#32;_nop_();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8c_1a2ecf45e8538defe45a5a16850a81a653">SPI3_Byte</link>(address);
<anchor xml:id="_bsp___s_p_i_8c_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8c_1a2ecf45e8538defe45a5a16850a81a653">SPI3_Byte</link>(dat);
<anchor xml:id="_bsp___s_p_i_8c_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1addf4368e6b0d3da85a501fb3f85a6552">SPI3_RST_PIN</link>=0;}
<anchor xml:id="_bsp___s_p_i_8c_source_1l00066"/>00066 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00073"/><link linkend="_bsp___s_p_i_8c_1aa6e79014518addc4ffc1c1ab0d09895d">00073</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_bsp___s_p_i_8c_1aa6e79014518addc4ffc1c1ab0d09895d">SPI3_ReadOneByte</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;address){
<anchor xml:id="_bsp___s_p_i_8c_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;i,temp=0x00;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1addf4368e6b0d3da85a501fb3f85a6552">SPI3_RST_PIN</link>=0;&#32;_nop_();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1abaea28949cf8101fa69c8d08cca1deea">SPI3_SCK_PIN</link>=0;&#32;_nop_();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1addf4368e6b0d3da85a501fb3f85a6552">SPI3_RST_PIN</link>=1;&#32;_nop_();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8c_1a2ecf45e8538defe45a5a16850a81a653">SPI3_Byte</link>(address);
<anchor xml:id="_bsp___s_p_i_8c_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;i&lt;8;i++){
<anchor xml:id="_bsp___s_p_i_8c_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1abaea28949cf8101fa69c8d08cca1deea">SPI3_SCK_PIN</link>=0;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&gt;&gt;=1;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_bsp___s_p_i_8h_1ac76a4601b5600b527bc0e18ce520ffdf">SPI3_SDA_PIN</link>)temp|=0x80;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1abaea28949cf8101fa69c8d08cca1deea">SPI3_SCK_PIN</link>=1;}
<anchor xml:id="_bsp___s_p_i_8c_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1addf4368e6b0d3da85a501fb3f85a6552">SPI3_RST_PIN</link>=0;&#32;_nop_();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1abaea28949cf8101fa69c8d08cca1deea">SPI3_SCK_PIN</link>=0;&#32;_nop_();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1abaea28949cf8101fa69c8d08cca1deea">SPI3_SCK_PIN</link>=1;&#32;_nop_();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1ac76a4601b5600b527bc0e18ce520ffdf">SPI3_SDA_PIN</link>=0;&#32;_nop_();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1ac76a4601b5600b527bc0e18ce520ffdf">SPI3_SDA_PIN</link>=1;&#32;_nop_();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;temp;}
<anchor xml:id="_bsp___s_p_i_8c_source_1l00091"/>00091 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00092"/>00092 <emphasis role="comment">//&#32;&#32;函数</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00098"/><link linkend="_bsp___s_p_i_8c_1abf70d4b78a6bd60a27cbd480386c7a31">00098</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_bsp___s_p_i_8c_1abf70d4b78a6bd60a27cbd480386c7a31">SPI4_Init</link>(<emphasis role="keywordtype">void</emphasis>){
<anchor xml:id="_bsp___s_p_i_8c_source_1l00099"/>00099 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1ae79f6f8effdcbe58c1e65ab75d9943a2">SPI4_CS_PIN</link>=<link linkend="_bsp___s_p_i_8h_1ade4259fa3cbb71732a4e73c18dcb9b0d">SPI_CS</link>;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1a886e6e40e669d67b70c943ee5d4a36b1">SPI4_SCK_PIN</link>=<link linkend="_bsp___s_p_i_8h_1ad8e335b1f808bd7408d2aef2377adcb1">SPI_CPOL</link>;}
<anchor xml:id="_bsp___s_p_i_8c_source_1l00101"/>00101 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00107"/><link linkend="_bsp___s_p_i_8c_1a94d3d300d004187a9b86bfcd8b55aaf4">00107</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_bsp___s_p_i_8c_1a94d3d300d004187a9b86bfcd8b55aaf4">SPI4_Byte</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;temp){
<anchor xml:id="_bsp___s_p_i_8c_source_1l00108"/>00108 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;k=0;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00109"/>00109 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i=0;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;res=0;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00111"/>00111 <emphasis role="comment">//&#32;&#32;CPHA=1</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00112"/>00112 <emphasis role="preprocessor">#if&#32;SPI_CPHA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;&#32;前沿输出后沿采样</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1a184311bc8cf6e692faeeb53ace6a9b73">SPI4_Delay</link>();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00114"/>00114 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;i&lt;8;i++){
<anchor xml:id="_bsp___s_p_i_8c_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1a886e6e40e669d67b70c943ee5d4a36b1">SPI4_SCK_PIN</link>=!<link linkend="_bsp___s_p_i_8h_1ad8e335b1f808bd7408d2aef2377adcb1">SPI_CPOL</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;先沿</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1a82a3152fbc1ecd0ae1e411ada4bd233b">SPI4_MOSI_PIN</link>=(_crol_(temp,i)&amp;0x80)!=0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;输出</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1a184311bc8cf6e692faeeb53ace6a9b73">SPI4_Delay</link>();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1a886e6e40e669d67b70c943ee5d4a36b1">SPI4_SCK_PIN</link>=<link linkend="_bsp___s_p_i_8h_1ad8e335b1f808bd7408d2aef2377adcb1">SPI_CPOL</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;后沿</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res|=(<link linkend="_bsp___s_p_i_8h_1ae601d0fdc759fb443e9a85a837ad33cf">SPI4_MISO_PIN</link>!=0);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;采样</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1a184311bc8cf6e692faeeb53ace6a9b73">SPI4_Delay</link>();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i!=7)res&lt;&lt;=1;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_bsp___s_p_i_8c_source_1l00123"/>00123 <emphasis role="comment">//&#32;&#32;CPHA=0</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00124"/>00124 <emphasis role="preprocessor">#else&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;&#32;前沿采样后沿传输</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00125"/>00125 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1a82a3152fbc1ecd0ae1e411ada4bd233b">SPI4_MOSI_PIN</link>=(_crol_(temp,0)&amp;0x80)!=0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;预输出</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00126"/>00126 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1a184311bc8cf6e692faeeb53ace6a9b73">SPI4_Delay</link>();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00127"/>00127 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=1;i&lt;9;i++){
<anchor xml:id="_bsp___s_p_i_8c_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1a886e6e40e669d67b70c943ee5d4a36b1">SPI4_SCK_PIN</link>=!<link linkend="_bsp___s_p_i_8h_1ad8e335b1f808bd7408d2aef2377adcb1">SPI_CPOL</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;先沿</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res|=(<link linkend="_bsp___s_p_i_8h_1ae601d0fdc759fb443e9a85a837ad33cf">SPI4_MISO_PIN</link>!=0);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;采样</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1a184311bc8cf6e692faeeb53ace6a9b73">SPI4_Delay</link>();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i!=8)res&lt;&lt;=1;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1a886e6e40e669d67b70c943ee5d4a36b1">SPI4_SCK_PIN</link>=<link linkend="_bsp___s_p_i_8h_1ad8e335b1f808bd7408d2aef2377adcb1">SPI_CPOL</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;后沿</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1a82a3152fbc1ecd0ae1e411ada4bd233b">SPI4_MOSI_PIN</link>=(_crol_(temp,i)&amp;0x80)!=0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;输出</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1a184311bc8cf6e692faeeb53ace6a9b73">SPI4_Delay</link>();
<anchor xml:id="_bsp___s_p_i_8c_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_bsp___s_p_i_8c_source_1l00136"/>00136 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00137"/>00137 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;res;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00138"/>00138 &#32;&#32;&#32;&#32;}
<anchor xml:id="_bsp___s_p_i_8c_source_1l00139"/>00139 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00150"/><link linkend="_bsp___s_p_i_8c_1aa65055bd7d8a87b839b4d0c3072c8298">00150</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_bsp___s_p_i_8c_1aa65055bd7d8a87b839b4d0c3072c8298">SPI4_Data_WR</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;format,...){
<anchor xml:id="_bsp___s_p_i_8c_source_1l00151"/>00151 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;temp=0;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00152"/>00152 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;member=0;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00153"/>00153 &#32;&#32;&#32;&#32;va_list&#32;args;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;不定长变量</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00154"/>00154 &#32;&#32;&#32;&#32;va_start(args,&#32;format);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;初始化不定长变量</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00155"/>00155 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1ae79f6f8effdcbe58c1e65ab75d9943a2">SPI4_CS_PIN</link>=!<link linkend="_bsp___s_p_i_8h_1ade4259fa3cbb71732a4e73c18dcb9b0d">SPI_CS</link>;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00156"/>00156 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(*format==<emphasis role="charliteral">&apos;W&apos;</emphasis>&#32;||&#32;*format==<emphasis role="charliteral">&apos;w&apos;</emphasis>&#32;||&#32;*format==<emphasis role="charliteral">&apos;R&apos;</emphasis>&#32;||&#32;*format==<emphasis role="charliteral">&apos;r&apos;</emphasis>){
<anchor xml:id="_bsp___s_p_i_8c_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(*format==<emphasis role="charliteral">&apos;W&apos;</emphasis>&#32;||&#32;*format==<emphasis role="charliteral">&apos;w&apos;</emphasis>){
<anchor xml:id="_bsp___s_p_i_8c_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp=va_arg(args,<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;获取W参数</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8c_1a94d3d300d004187a9b86bfcd8b55aaf4">SPI4_Byte</link>(temp);}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;写入</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(*format==<emphasis role="charliteral">&apos;R&apos;</emphasis>&#32;||&#32;*format==<emphasis role="charliteral">&apos;r&apos;</emphasis>){
<anchor xml:id="_bsp___s_p_i_8c_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;member=va_arg(args,<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;获取R参数</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*member=<link linkend="_bsp___s_p_i_8c_1a94d3d300d004187a9b86bfcd8b55aaf4">SPI4_Byte</link>(0xFF);}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;读取</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;format++;}
<anchor xml:id="_bsp___s_p_i_8c_source_1l00164"/>00164 &#32;&#32;&#32;&#32;va_end(args);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;收尸</emphasis>
<anchor xml:id="_bsp___s_p_i_8c_source_1l00165"/>00165 &#32;&#32;&#32;&#32;<link linkend="_bsp___s_p_i_8h_1ae79f6f8effdcbe58c1e65ab75d9943a2">SPI4_CS_PIN</link>=<link linkend="_bsp___s_p_i_8h_1ade4259fa3cbb71732a4e73c18dcb9b0d">SPI_CS</link>;
<anchor xml:id="_bsp___s_p_i_8c_source_1l00166"/>00166 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;}
</programlisting></section>
